<?xml version="1.0" encoding="us-ascii"?>
<hrc version="take5" xmlns="http://colorer.sf.net/2003/hrc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<type name="PowerShell">

<annotation>
<documentation><![CDATA[

PowerShell.hrc 2011-09-08
Designed for PowerShell 2.0, Colorer 1.0.3, and RomanConsole.hrd
Distributed with the PowerShellFar module: http://code.google.com/p/farnet

INSTALLATION

Add the prototype like this to the proto.hrc or your custom hrc file:

<prototype name="PowerShell" group="scripts" description="PowerShell">
<filename>/\.(?:ps[dDmM]?1|ps[dDmM]1?\.bak|psfconsole)$/i</filename>
<location link=".\PowerShell.hrc"/>
</prototype>

REGEX AND SQL IN HERE STRINGS

Here strings are processed with 'regexp' or 'sql' schemes starting with lines
#REGEX or --SQL respectively. Note that regex normally should be created with
option IgnorePatternWhitespace or use inline instruction (?x).

Examples:

$re = @"
#REGEX Groups Id and Name
\#(?<Id>\d+)           # #number
\s+                    # spaces
(?<Name>[_a-zA-Z]\w*)  # name
"@
.. = New-Object Regex $re, 'IgnorePatternWhitespace'

.. @'
--SQL ..
SELECT ..
FROM ..
..
'@

]]></documentation>
<contributors>
Roman Kuzmin, [nightroman@gmail.com]
</contributors>
</annotation>

<import type="def"/>

<!-- Escaped -->
<scheme name="PSEscaped">
<regexp match="/`\s+$/" region="def:Error"/>
<regexp match="/`./" region="def:StringContent"/>
</scheme>

<!-- User variable, operator :: -->
<scheme name="PSUserVariable">
<regexp match="/((\$(?:global|script):\w+))\s*(=)/i" region1="def:Var" region2="def:Outlined" region3="def:Operator"/>
<regexp match="/(\$\w+)(::)/" region1="def:Var" region2="def:Operator"/>
<regexp match="/[$@][\w:]*\w/" region="def:Var"/>
<block start="/\$\{/" end="/\}/" scheme="PSEscaped" region="def:Var" region00="def:PairStart" region10="def:PairEnd" region01="def:Var" region11="def:Var"/>
</scheme>

<!-- Auto variables -->
<scheme name="PSAutoVariable">
<!-- System constants -->
<keywords ignorecase="yes" region="def:Constant">
<word name="$false"/>
<word name="$null"/>
<word name="$true"/>
</keywords>
<!-- System variables -->
<keywords ignorecase="yes" region="def:VarStrong">
<!-- PSF variables -->
<word name="$Far"/>
<word name="$Psf"/>
<!-- PS variables -->
<word name="$$"/>
<word name="$?"/>
<word name="$^"/>
<word name="$_"/>
<word name="$args"/>
<word name="$ConfirmPreference"/>
<word name="$ConsoleFileName"/>
<word name="$DebugPreference"/>
<word name="$Error"/>
<word name="$ErrorActionPreference"/>
<word name="$ErrorView"/>
<word name="$Event"/>
<word name="$EventSubscriber"/>
<word name="$ExecutionContext"/>
<word name="$foreach"/>
<word name="$FormatEnumerationLimit"/>
<word name="$HOME"/>
<word name="$Host"/>
<word name="$input"/>
<word name="$LastExitCode"/>
<word name="$Matches"/>
<word name="$MaximumAliasCount"/>
<word name="$MaximumDriveCount"/>
<word name="$MaximumErrorCount"/>
<word name="$MaximumFunctionCount"/>
<word name="$MaximumHistoryCount"/>
<word name="$MaximumVariableCount"/>
<word name="$MyInvocation"/>
<word name="$NestedPromptLevel"/>
<word name="$OFS"/>
<word name="$OutputEncoding"/>
<word name="$PID"/>
<word name="$Profile"/>
<word name="$ProgressPreference"/>
<word name="$PSBoundParameters"/>
<word name="@PSBoundParameters"/>
<word name="$PSCmdlet"/>
<word name="$PSCulture"/>
<word name="$PSDebugContext"/>
<word name="$PSEmailServer"/>
<word name="$PSHOME"/>
<word name="$psISE"/>
<word name="$psScriptRoot"/>
<word name="$PSSessionApplicationName"/>
<word name="$PSSessionConfigurationName"/>
<word name="$PSSessionOption"/>
<word name="$PSUICulture"/>
<word name="$PSVersionTable"/>
<word name="$PWD"/>
<word name="$ReportErrorShowExceptionClass"/>
<word name="$ReportErrorShowInnerException"/>
<word name="$ReportErrorShowSource"/>
<word name="$ReportErrorShowStackTrace"/>
<word name="$Sender"/>
<word name="$ShellId"/>
<word name="$SourceArgs"/>
<word name="$SourceEventArgs"/>
<word name="$StackTrace"/>
<word name="$this"/>
<word name="$Transcript"/>
<word name="$VerbosePreference"/>
<word name="$WarningPreference"/>
<word name="$WhatIfPreference"/>
</keywords>
</scheme>

<!-- Expanded -->
<scheme name="PSExpanded">
<block start="/(\$\()/" end="/(\))/" scheme="PowerShell" region00="def:PairStart" region10="def:PairEnd" region01="def:Var" region11="def:Var"/>
</scheme>

<!-- Content '' -->
<scheme name="PSAposContent">
<regexp match="/''/" region="def:StringContent"/>
</scheme>

<!-- Content "" -->
<scheme name="PSQuotContent">
<inherit scheme="PSEscaped"/>
<inherit scheme="PSAutoVariable"/>
<inherit scheme="PSUserVariable"/>
<inherit scheme="PSExpanded"/>
</scheme>

<!-- Content "''" -->
<scheme name="PSBothContent">
<inherit scheme="PSAposContent"/>
<inherit scheme="PSQuotContent"/>
</scheme>

<!-- Array -->
<scheme name="PSArray">
<block start="/(\@\()/" end="/(\))/" scheme="PowerShell" region00="def:SymbolStrong" region01="def:PairStart" region10="def:SymbolStrong" region11="def:PairEnd"/>
</scheme>

<!-- Hash -->
<scheme name="PSHash">
<block start="/(\@\{)/" end="/(\})/" scheme="PowerShell" region00="def:SymbolStrong" region01="def:PairStart" region10="def:SymbolStrong" region11="def:PairEnd"/>
</scheme>

<!-- Number -->
<entity name="psnumexp" value="(?:[eE][\-+]?\d+)"/>
<entity name="psnumsuf" value="(?:[DdLl]?(?:KB|MB|GB|TB|PB)?)"/>
<scheme name="PSNumber">
<regexp match="/\B\.?~1\.\d+%psnumexp;?%psnumsuf;\b/i" region="def:NumberFloat"/>
<regexp match="/\b\d+\.\.?!\d*(?:%psnumexp;?%psnumsuf;\b|\B)/i" region="def:NumberFloat"/>
<regexp match="/\b\d+%psnumexp;%psnumsuf;\b/i" region="def:NumberFloat"/>
<regexp match="/\b0[xX][\da-fA-F]+%psnumsuf;\b/i" region="def:NumberHex"/>
<regexp match="/\b\d+%psnumsuf;\b/i" region="def:NumberDec"/>
</scheme>

<!-- Regex -->
<import type="regexp"/>
<entity name="psregex" value="^\#REGEX\b.*$"/>
<scheme name="PSAposRegex">
<inherit scheme="PSAposContent"/>
<inherit scheme="regexp:pcre.regexp"/>
</scheme>
<scheme name="PSQuotRegex">
<inherit scheme="PSQuotContent"/>
<inherit scheme="regexp:pcre.regexp"/>
</scheme>

<!-- SQL -->
<import type="sql"/>
<entity name="pssql" value="^--SQL\b.*$"/>
<scheme name="PSAposSql">
<inherit scheme="PSAposContent"/>
<inherit scheme="sql"/>
<regexp match="/\b[A-Za-z_]\w*/i" region="def:Identifier"/>
</scheme>
<scheme name="PSQuotSql">
<block start="/&apos;/" end="/&apos;/" scheme="PSBothContent" region="def:String" region00="def:PairStart" region10="def:PairEnd"/>
<inherit scheme="PSQuotContent"/>
<inherit scheme="sql"/>
<regexp match="/\b[A-Za-z_]\w*/i" region="def:Identifier"/>
</scheme>

<!-- Content @''@ -->
<scheme name="PSAposContentHere">
<block content-priority="low" start="/%psregex;/i" end="/^\M&apos;@/i" scheme="PSAposRegex" region00="def:Comment"/>
<block content-priority="low" start="/%pssql;/i" end="/^\M&apos;@/i" scheme="PSAposSql" region00="def:Comment"/>
</scheme>

<!-- Content @""@ -->
<scheme name="PSQuotContentHere">
<block content-priority="low" start="/%psregex;/i" end="/^\M&quot;@/i" scheme="PSQuotRegex" region00="def:Comment"/>
<block content-priority="low" start="/%pssql;/i" end="/^\M&quot;@/i" scheme="PSQuotSql" region00="def:Comment"/>
<inherit scheme="PSQuotContent"/>
</scheme>

<!-- Content <##>; sync with TabExpansion -->
<scheme name="PSCommentContent">
<regexp match="/(?:^|~)\s*\.(?:SYNOPSIS|DESCRIPTION|INPUTS|OUTPUTS|NOTES|EXAMPLE|LINK|COMPONENT|ROLE|FUNCTIONALITY)\s*$/i" region="def:CommentDoc"/>
<regexp match="/(?:^|~)\s*(\.(?:PARAMETER|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP))\s+(.+)$/i" region1="def:CommentDoc" region2="def:Var"/>
</scheme>

<!-- Content of .psfconsole -->
<scheme name="PSOutputContent">
<regexp match="/^ERROR(?::|\b)|\&lt;\&lt;\&lt;\&lt;(?:\s|$)/" region="def:Error"/>
<regexp match="/^WARNING\b.*$/" region="def:StringContent"/>
<regexp match="/^(?:DEBUG|VERBOSE)\b.*$/" region="def:Comment"/>
<inherit scheme="PSNumber"/>
</scheme>

<!-- Main scheme -->
<scheme name="PowerShell">

<!-- Block comments -->
<block start="/&lt;\#/" end="/\#&gt;/" scheme="PSCommentContent" region00="def:PairStart" region10="def:PairEnd" region="def:Comment"/>

<!-- .psfconsole -->
<block start="/^&lt;=$/" end="/^=&gt;$/" scheme="PSOutputContent" region00="def:PairStart" region10="def:PairEnd"/>

<!-- ### Outlined line comments -->
<regexp match="/(?:^|\s)(\#\#\#(?:\s+.*|$))/" region="def:Comment" region1="def:Outlined"/>

<!-- # Other line comments -->
<block start="/(?:^|\s)\#+/" end="/$/" scheme="PSCommentContent" region="def:Comment"/>

<!-- Regex -->
<block start="/(-[cCiI]?(?:match|notmatch|replace))\s+\m(&apos;)/i" end="/(&apos;)/" scheme="PSAposRegex" region="def:String" region00="def:PairStart" region01="def:Keyword" region10="def:PairEnd"/>
<block start="/(-[cCiI]?(?:match|notmatch|replace))\s+\m(&quot;)/i" end="/(&quot;)/" scheme="PSQuotRegex" region="def:String" region00="def:PairStart" region01="def:Keyword" region10="def:PairEnd"/>

<!-- Apos-strings -->
<block start="/@&apos;$/" end="/^&apos;@/" scheme="PSAposContentHere" region="def:String" region00="def:PairStart" region10="def:PairEnd"/>
<block start="/&apos;/" end="/&apos;/" scheme="PSAposContent" region="def:String" region00="def:PairStart" region10="def:PairEnd"/>

<!-- Escaped -->
<inherit scheme="PSEscaped"/>

<!-- Expanded -->
<inherit scheme="PSExpanded"/>

<!-- Array -->
<inherit scheme="PSArray"/>

<!-- Hash -->
<inherit scheme="PSHash"/>

<!-- Quot-strings -->
<block start="/@&quot;$/" end="/^&quot;@/" scheme="PSQuotContentHere" region="def:String" region00="def:PairStart" region10="def:PairEnd"/>
<block start="/&quot;/" end="/&quot;/" scheme="PSQuotContent" region="def:String" region00="def:PairStart" region10="def:PairEnd"/>

<!-- Types [xxx.xxx], [xxx[]] except [1], [$i] and operator :: -->
<regexp match="/(\[[A-Za-z][\w.+]*(?:\[\])*\])(::)?/" region1="def:TypeKeyword" region2="def:Operator"/>

<!-- Brackets -->
<inherit scheme="def:PairedBrackets">
<virtual scheme="def:PairedBrackets" subst-scheme="PowerShell"/>
</inherit>

<!-- Cmdlets -->
<keywords ignorecase="yes" region="def:Keyword" worddiv="[\s\(\)\{\};=|]">
<word name="Add-Computer"/>
<word name="Add-Content"/>
<word name="Add-History"/>
<word name="Add-Member"/>
<word name="Add-PSSnapin"/>
<word name="Add-Type"/>
<word name="Checkpoint-Computer"/>
<word name="Clear-Content"/>
<word name="Clear-EventLog"/>
<word name="Clear-History"/>
<word name="Clear-Item"/>
<word name="Clear-ItemProperty"/>
<word name="Clear-Variable"/>
<word name="Compare-Object"/>
<word name="Complete-Transaction"/>
<word name="Connect-WSMan"/>
<word name="ConvertFrom-Csv"/>
<word name="ConvertFrom-SecureString"/>
<word name="ConvertFrom-StringData"/>
<word name="Convert-Path"/>
<word name="ConvertTo-Csv"/>
<word name="ConvertTo-Html"/>
<word name="ConvertTo-SecureString"/>
<word name="ConvertTo-Xml"/>
<word name="Copy-Item"/>
<word name="Copy-ItemProperty"/>
<word name="Debug-Process"/>
<word name="Disable-ComputerRestore"/>
<word name="Disable-PSBreakpoint"/>
<word name="Disable-PSSessionConfiguration"/>
<word name="Disable-WSManCredSSP"/>
<word name="Disconnect-WSMan"/>
<word name="Enable-ComputerRestore"/>
<word name="Enable-PSBreakpoint"/>
<word name="Enable-PSRemoting"/>
<word name="Enable-PSSessionConfiguration"/>
<word name="Enable-WSManCredSSP"/>
<word name="Enter-PSSession"/>
<word name="Exit-PSSession"/>
<word name="Export-Alias"/>
<word name="Export-Clixml"/>
<word name="Export-Console"/>
<word name="Export-Counter"/>
<word name="Export-Csv"/>
<word name="Export-FormatData"/>
<word name="Export-ModuleMember"/>
<word name="Export-PSSession"/>
<word name="ForEach-Object"/>
<word name="Format-Custom"/>
<word name="Format-List"/>
<word name="Format-Table"/>
<word name="Format-Wide"/>
<word name="Get-Acl"/>
<word name="Get-Alias"/>
<word name="Get-AuthenticodeSignature"/>
<word name="Get-ChildItem"/>
<word name="Get-Command"/>
<word name="Get-ComputerRestorePoint"/>
<word name="Get-Content"/>
<word name="Get-Counter"/>
<word name="Get-Credential"/>
<word name="Get-Culture"/>
<word name="Get-Date"/>
<word name="Get-Event"/>
<word name="Get-EventLog"/>
<word name="Get-EventSubscriber"/>
<word name="Get-ExecutionPolicy"/>
<word name="Get-FormatData"/>
<word name="Get-Help"/>
<word name="Get-History"/>
<word name="Get-Host"/>
<word name="Get-HotFix"/>
<word name="Get-Item"/>
<word name="Get-ItemProperty"/>
<word name="Get-Job"/>
<word name="Get-Location"/>
<word name="Get-Member"/>
<word name="Get-Module"/>
<word name="Get-PfxCertificate"/>
<word name="Get-Process"/>
<word name="Get-PSBreakpoint"/>
<word name="Get-PSCallStack"/>
<word name="Get-PSDrive"/>
<word name="Get-PSProvider"/>
<word name="Get-PSSession"/>
<word name="Get-PSSessionConfiguration"/>
<word name="Get-PSSnapin"/>
<word name="Get-Random"/>
<word name="Get-Service"/>
<word name="Get-TraceSource"/>
<word name="Get-Transaction"/>
<word name="Get-UICulture"/>
<word name="Get-Unique"/>
<word name="Get-Variable"/>
<word name="Get-WinEvent"/>
<word name="Get-WmiObject"/>
<word name="Get-WSManCredSSP"/>
<word name="Get-WSManInstance"/>
<word name="Group-Object"/>
<word name="Import-Alias"/>
<word name="Import-Clixml"/>
<word name="Import-Counter"/>
<word name="Import-Csv"/>
<word name="Import-LocalizedData"/>
<word name="Import-Module"/>
<word name="Import-PSSession"/>
<word name="Invoke-Command"/>
<word name="Invoke-Expression"/>
<word name="Invoke-History"/>
<word name="Invoke-Item"/>
<word name="Invoke-WMIMethod"/>
<word name="Invoke-WSManAction"/>
<word name="Join-Path"/>
<word name="Limit-EventLog"/>
<word name="Measure-Command"/>
<word name="Measure-Object"/>
<word name="Move-Item"/>
<word name="Move-ItemProperty"/>
<word name="New-Alias"/>
<word name="New-Event"/>
<word name="New-EventLog"/>
<word name="New-Item"/>
<word name="New-ItemProperty"/>
<word name="New-Module"/>
<word name="New-ModuleManifest"/>
<word name="New-Object"/>
<word name="New-PSDrive"/>
<word name="New-PSSession"/>
<word name="New-PSSessionOption"/>
<word name="New-Service"/>
<word name="New-TimeSpan"/>
<word name="New-Variable"/>
<word name="New-WebServiceProxy"/>
<word name="New-WSManInstance"/>
<word name="New-WSManSessionOption"/>
<word name="Out-Default"/>
<word name="Out-File"/>
<word name="Out-GridView"/>
<word name="Out-Host"/>
<word name="Out-Null"/>
<word name="Out-Printer"/>
<word name="Out-String"/>
<word name="Pop-Location"/>
<word name="Push-Location"/>
<word name="Read-Host"/>
<word name="Receive-Job"/>
<word name="Register-EngineEvent"/>
<word name="Register-ObjectEvent"/>
<word name="Register-PSSessionConfiguration"/>
<word name="Register-WmiEvent"/>
<word name="Remove-Computer"/>
<word name="Remove-Event"/>
<word name="Remove-EventLog"/>
<word name="Remove-Item"/>
<word name="Remove-ItemProperty"/>
<word name="Remove-Job"/>
<word name="Remove-Module"/>
<word name="Remove-PSBreakpoint"/>
<word name="Remove-PSDrive"/>
<word name="Remove-PSSession"/>
<word name="Remove-PSSnapin"/>
<word name="Remove-Variable"/>
<word name="Remove-WMIObject"/>
<word name="Remove-WSManInstance"/>
<word name="Rename-Item"/>
<word name="Rename-ItemProperty"/>
<word name="Reset-ComputerMachinePassword"/>
<word name="Resolve-Path"/>
<word name="Restart-Computer"/>
<word name="Restart-Service"/>
<word name="Restore-Computer"/>
<word name="Resume-Service"/>
<word name="Select-Object"/>
<word name="Select-String"/>
<word name="Select-Xml"/>
<word name="Send-MailMessage"/>
<word name="Set-Acl"/>
<word name="Set-Alias"/>
<word name="Set-AuthenticodeSignature"/>
<word name="Set-Content"/>
<word name="Set-Date"/>
<word name="Set-ExecutionPolicy"/>
<word name="Set-Item"/>
<word name="Set-ItemProperty"/>
<word name="Set-Location"/>
<word name="Set-PSBreakpoint"/>
<word name="Set-PSDebug"/>
<word name="Set-PSSessionConfiguration"/>
<word name="Set-Service"/>
<word name="Set-StrictMode"/>
<word name="Set-TraceSource"/>
<word name="Set-Variable"/>
<word name="Set-WMIInstance"/>
<word name="Set-WSManInstance"/>
<word name="Set-WSManQuickConfig"/>
<word name="Show-EventLog"/>
<word name="Sort-Object"/>
<word name="Split-Path"/>
<word name="Start-Job"/>
<word name="Start-Process"/>
<word name="Start-Service"/>
<word name="Start-Sleep"/>
<word name="Start-Transaction"/>
<word name="Start-Transcript"/>
<word name="Stop-Computer"/>
<word name="Stop-Job"/>
<word name="Stop-Process"/>
<word name="Stop-Service"/>
<word name="Stop-Transcript"/>
<word name="Suspend-Service"/>
<word name="Tee-Object"/>
<word name="Test-ComputerSecureChannel"/>
<word name="Test-Connection"/>
<word name="Test-ModuleManifest"/>
<word name="Test-Path"/>
<word name="Test-WSMan"/>
<word name="Trace-Command"/>
<word name="Undo-Transaction"/>
<word name="Unregister-Event"/>
<word name="Unregister-PSSessionConfiguration"/>
<word name="Update-FormatData"/>
<word name="Update-List"/>
<word name="Update-TypeData"/>
<word name="Use-Transaction"/>
<word name="Wait-Event"/>
<word name="Wait-Job"/>
<word name="Wait-Process"/>
<word name="Where-Object"/>
<word name="Write-Debug"/>
<word name="Write-Error"/>
<word name="Write-EventLog"/>
<word name="Write-Host"/>
<word name="Write-Output"/>
<word name="Write-Progress"/>
<word name="Write-Verbose"/>
<word name="Write-Warning"/>
<!-- Far cmdlets -->
<word name="Assert-Far"/>
<word name="Find-FarFile"/>
<word name="Get-FarFile"/>
<word name="Get-FarItem"/>
<word name="Get-FarPath"/>
<word name="New-FarEditor"/>
<word name="New-FarFile"/>
<word name="New-FarItem"/>
<word name="New-FarList"/>
<word name="New-FarMenu"/>
<word name="New-FarViewer"/>
<word name="Open-FarEditor"/>
<word name="Open-FarPanel"/>
<word name="Open-FarViewer"/>
<word name="Out-FarList"/>
<word name="Out-FarPanel"/>
<word name="Search-FarFile"/>
<word name="Show-FarMessage"/>
<word name="Start-FarJob"/>
<!-- FarDescription cmdlets -->
<word name="Update-FarDescription"/>
<!-- FarMacro cmdlets -->
<word name="Edit-FarMacro"/>
<word name="Set-FarMacro"/>
<word name="New-FarMacro"/>
</keywords>

<!-- Auto variables -->
<inherit scheme="PSAutoVariable"/>

<!-- User variables -->
<inherit scheme="PSUserVariable"/>

<!-- Operators -->
<keywords ignorecase="yes" region="def:Operator">
<word name="-eq"/>
<word name="-ne"/>
<word name="-ge"/>
<word name="-gt"/>
<word name="-lt"/>
<word name="-le"/>
<word name="-like"/>
<word name="-notlike"/>
<word name="-match"/>
<word name="-notmatch"/>
<word name="-replace"/>
<word name="-contains"/>
<word name="-notcontains"/>
<word name="-ieq"/>
<word name="-ine"/>
<word name="-ige"/>
<word name="-igt"/>
<word name="-ile"/>
<word name="-ilt"/>
<word name="-ilike"/>
<word name="-inotlike"/>
<word name="-imatch"/>
<word name="-inotmatch"/>
<word name="-ireplace"/>
<word name="-icontains"/>
<word name="-inotcontains"/>
<word name="-ceq"/>
<word name="-cne"/>
<word name="-cge"/>
<word name="-cgt"/>
<word name="-clt"/>
<word name="-cle"/>
<word name="-clike"/>
<word name="-cnotlike"/>
<word name="-cmatch"/>
<word name="-cnotmatch"/>
<word name="-creplace"/>
<word name="-ccontains"/>
<word name="-cnotcontains"/>
<word name="-is"/>
<word name="-isnot"/>
<word name="-as"/>
<word name="-and"/>
<word name="-not"/>
<word name="-or"/>
<word name="-xor"/>
<word name="-band"/>
<word name="-bor"/>
<word name="-bnot"/>
<word name="-bxor"/>
<word name="-f"/>
<word name="-join"/>
<word name="-split"/>
<word name="-csplit"/>
<word name="-isplit"/>
<symb name="--"/>
<symb name="++"/>
<symb name="+="/>
<symb name="-="/>
<symb name="*="/>
<symb name="/="/>
<symb name="%="/>
<symb name="="/>
<symb name="+"/>
<symb name="*"/>
<symb name="/"/>
<symb name="%"/>
<symb name=".."/>
</keywords>

<!-- Operator - -->
<regexp match="/\-[a-zA-Z]?!/" region="def:Operator"/>

<!-- Keywords (absolute everywhere) -->
<keywords ignorecase="yes" region="def:Keyword" worddiv="[\s\(\)\{\};]">
<word name="in"/>
</keywords>

<!-- if, eleseif -->
<regexp match="/(?:^|~|[;=\}]?#1)\s*(if)\s*\M\(/i" region1="def:Keyword"/>
<regexp match="/(?:^|~|[;\}]?#1)\s*(elseif)\s*\M\(/i" region1="def:Keyword"/>

<!-- Loops -->
<regexp match="/(?:^|~|[;=\}]?#1)\s*(:[A-Za-z_][-\w]*)?\s*(for|foreach|while|until)\s*\M\(/i" region1="def:Identifier" region2="def:Keyword"/>
<regexp match="/(?:^|~|[;=\}]?#1)\s*(:[A-Za-z_][-\w]*)?\s*(do)\s*\M\{/i" region1="def:Identifier" region2="def:Keyword"/>

<!-- Other keywords including reserved; negative look-ahead for = (keys in hashes) -->
<regexp match="/(?:^|~|[;\}]?#1)\s*(break|catch|class|continue|default|define|else|exit|finally|param|return|switch|throw|trap|try|using|var)\b(\s*=)?!/i" region1="def:Keyword"/>
<regexp match="/(?:^|~|[;\}\)]?#1)\s*(begin|end|process)\b(\s*=)?!/i" region1="def:Keyword"/>

<!-- Function and etc. Let's name starts with \w for simplicity -->
<regexp match="/(?:^|~|[;\}]?#1)\s*(function|filter|data|task)\s+(([\w\.][^\s\(\{]*))/i" region1="def:FunctionKeyword" region2="def:Identifier" region3="def:Outlined"/>

<!-- Pipeline and redirection (before PSNumber) -->
<keywords ignorecase="yes" region="def:KeywordStrong">
<symb name="|"/>
<symb name="&gt;"/>
<symb name="&gt;&gt;"/>
<symb name="2&gt;"/>
<symb name="2&gt;&amp;1"/>
<symb name="2&gt;&gt;"/>
</keywords>

<!-- Redirection operators (before PSNumber) -->
<keywords ignorecase="yes" region="def:Error">
<word name="&lt;"/>
<word name="1&gt;&amp;2"/>
</keywords>

<!-- Numbers (after redirections) -->
<inherit scheme="PSNumber"/>

<!-- Identifiers (wrong but..) -->
<regexp match="/[\w.-]*/" region="def:Identifier"/>

<!-- Error: (ok, warning): redundant semicolon -->
<regexp match="/(;)(?:\s*$|\s*\}|\s+#)/" region1="def:Error"/>

<!-- Error: bad string: symbols after @' or @" -->
<regexp match="/@[&quot;&apos;].+/" region="def:Error"/>

</scheme>

</type>
</hrc>

<!--
LICENSE
- Version: MPL 1.1/GPL 2.0/LGPL 2.1
-
- The contents of this file are subject to the Mozilla Public License Version
- 1.1 (the "License"); you may not use this file except in compliance with
- the License. You may obtain a copy of the License at
- http://www.mozilla.org/MPL/
-
- Software distributed under the License is distributed on an "AS IS" basis,
- WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
- for the specific language governing rights and limitations under the
- License.
-
- The Original Code is the Colorer Library.
-
- The Initial Developer of the Original Code is
- Cail Lomecb <cail@nm.ru>.
- Portions created by the Initial Developer are Copyright (C) 1999-2005
- the Initial Developer. All Rights Reserved.
-
- Contributor(s):
- Roman Kuzmin <nightroman@gmail.com>
-
- Alternatively, the contents of this file may be used under the terms of
- either the GNU General Public License Version 2 or later (the "GPL"), or
- the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
- in which case the provisions of the GPL or the LGPL are applicable instead
- of those above. If you wish to allow use of your version of this file only
- under the terms of either the GPL or the LGPL, and not to allow others to
- use your version of this file under the terms of the MPL, indicate your
- decision by deleting the provisions above and replace them with the notice
- and other provisions required by the LGPL or the GPL. If you do not delete
- the provisions above, a recipient may use your version of this file under
- the terms of any one of the MPL, the GPL or the LGPL.
-->
